/* generated by Svelte v3.24.0 */
import {
	SvelteComponent,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space
} from "/the-js-not-have/svelte/internal.js";

function create_fragment(ctx) {
	let h1;
	let t1;
	let p0;
	let t3;
	let p1;
	let t5;
	let ul0;
	let t13;
	let p2;
	let t15;
	let ul1;

	return {
		c() {
			h1 = element("h1");
			h1.textContent = "Resources";
			t1 = space();
			p0 = element("p");
			p0.textContent = "I’ve written a few articles related to Babel and AST:";
			t3 = space();
			p1 = element("p");
			p1.innerHTML = `<em>Not in chronological order, but in logical order</em>`;
			t5 = space();
			ul0 = element("ul");

			ul0.innerHTML = `<li><a href="https://lihautan.com/json-parser-with-javascript/" rel="nofollow">JSON Parser with JavaScript</a></li> 
<li><a href="https://lihautan.com/manipulating-ast-with-javascript/" rel="nofollow">Manipulating AST with JavaScript</a></li> 
<li><a href="https://lihautan.com/step-by-step-guide-for-writing-a-babel-transformation/" rel="nofollow">Step-by-step guide for writing a custom babel transformation</a></li> 
<li><a href="https://lihautan.com/creating-custom-javascript-syntax-with-babel/" rel="nofollow">Creating custom JavaScript syntax with Babel</a></li>`;

			t13 = space();
			p2 = element("p");
			p2.textContent = "And there’s a ton of great articles from the community:";
			t15 = space();
			ul1 = element("ul");

			ul1.innerHTML = `<li><a href="https://medium.com/basecs/leveling-up-ones-parsing-game-with-asts-d7a6fc2400ff" rel="nofollow">Leveling Up One’s Parsing Game With ASTs</a></li> 
<li><a href="https://frontendmasters.com/courses/linting-asts/" rel="nofollow">Code Transformation and Linting with ASTs</a></li> 
<li><a href="https://kentcdodds.com/blog/write-your-own-code-transform/" rel="nofollow">Write your own code transform for fun and profit</a></li> 
<li><a href="https://www.sitepoint.com/understanding-asts-building-babel-plugin/" rel="nofollow">Understanding ASTs by Building Your Own Babel Plugin</a></li> 
<li><a href="https://github.com/jamiebuilds/babel-handbook/blob/master/translations/en/plugin-handbook.md#toc-writing-your-first-babel-plugin" rel="nofollow">Writing your first Babel Plugin</a></li> 
<li><a href="https://medium.com/the-guild/this-is-how-i-build-babel-plug-ins-b0a13dcd0352" rel="nofollow">This is how I build Babel plug-ins</a></li> 
<li><a href="https://varunzxzx.github.io/blog/writing-babel-plugin" rel="nofollow">Writing My First Babel Plugin</a></li>`;
		},
		m(target, anchor) {
			insert(target, h1, anchor);
			insert(target, t1, anchor);
			insert(target, p0, anchor);
			insert(target, t3, anchor);
			insert(target, p1, anchor);
			insert(target, t5, anchor);
			insert(target, ul0, anchor);
			insert(target, t13, anchor);
			insert(target, p2, anchor);
			insert(target, t15, anchor);
			insert(target, ul1, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(h1);
			if (detaching) detach(t1);
			if (detaching) detach(p0);
			if (detaching) detach(t3);
			if (detaching) detach(p1);
			if (detaching) detach(t5);
			if (detaching) detach(ul0);
			if (detaching) detach(t13);
			if (detaching) detach(p2);
			if (detaching) detach(t15);
			if (detaching) detach(ul1);
		}
	};
}

class Resources extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Resources;