/* generated by Svelte v3.24.0 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space
} from "/the-js-we-do-not-deserve/svelte/internal.js";

function add_css() {
	var style = element("style");
	style.id = "svelte-2fxloc-style";
	style.textContent = ".btn-cta.svelte-2fxloc{display:block;width:100px;margin:auto;padding:16px 32px;border:4px solid;box-shadow:5px 5px 0 var(--primary);text-align:center;text-decoration:none;font-family:var(--font-title)}";
	append(document.head, style);
}

function create_fragment(ctx) {
	let h1;
	let t1;
	let p0;
	let t3;
	let h40;
	let t5;
	let pre0;

	let raw0_value = `
<code class="language-js"><span class="token keyword">const</span> six <span class="token operator">=</span> <span class="token constant">IV</span> <span class="token operator">+</span> <span class="token constant">II</span><span class="token punctuation">;</span> <span class="token comment">// 6</span></code>` + "";

	let t6;
	let h41;
	let t9;
	let pre1;

	let raw1_value = `
<code class="language-js"><span class="token number">2</span> <span class="token operator">*</span> <span class="token string">'a'</span> <span class="token operator">===</span><span class="token operator">=</span> <span class="token number">NaN</span><span class="token punctuation">;</span> <span class="token comment">// true</span></code>` + "";

	let t10;
	let h42;
	let t12;
	let p1;
	let t14;
	let a;

	return {
		c() {
			h1 = element("h1");
			h1.textContent = "The JavaScript we do not deserve";
			t1 = space();
			p0 = element("p");
			p0.textContent = "What if JavaScript has all the features we think we want?";
			t3 = space();
			h40 = element("h4");
			h40.textContent = "Roman Numerals";
			t5 = space();
			pre0 = element("pre");
			t6 = space();
			h41 = element("h4");
			h41.innerHTML = `<code>====</code> really strict equals`;
			t9 = space();
			pre1 = element("pre");
			t10 = space();
			h42 = element("h4");
			h42.textContent = "â€¦ and more";
			t12 = space();
			p1 = element("p");
			p1.textContent = "Do you think we deserve it?";
			t14 = space();
			a = element("a");
			a.textContent = "Try it out";
			attr(pre0, "class", "language-js");
			attr(pre1, "class", "language-js");
			attr(a, "class", "btn-cta svelte-2fxloc");
			attr(a, "href", "#Demo");
		},
		m(target, anchor) {
			insert(target, h1, anchor);
			insert(target, t1, anchor);
			insert(target, p0, anchor);
			insert(target, t3, anchor);
			insert(target, h40, anchor);
			insert(target, t5, anchor);
			insert(target, pre0, anchor);
			pre0.innerHTML = raw0_value;
			insert(target, t6, anchor);
			insert(target, h41, anchor);
			insert(target, t9, anchor);
			insert(target, pre1, anchor);
			pre1.innerHTML = raw1_value;
			insert(target, t10, anchor);
			insert(target, h42, anchor);
			insert(target, t12, anchor);
			insert(target, p1, anchor);
			insert(target, t14, anchor);
			insert(target, a, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(h1);
			if (detaching) detach(t1);
			if (detaching) detach(p0);
			if (detaching) detach(t3);
			if (detaching) detach(h40);
			if (detaching) detach(t5);
			if (detaching) detach(pre0);
			if (detaching) detach(t6);
			if (detaching) detach(h41);
			if (detaching) detach(t9);
			if (detaching) detach(pre1);
			if (detaching) detach(t10);
			if (detaching) detach(h42);
			if (detaching) detach(t12);
			if (detaching) detach(p1);
			if (detaching) detach(t14);
			if (detaching) detach(a);
		}
	};
}

class Index extends SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-2fxloc-style")) add_css();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Index;